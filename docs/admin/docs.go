// Code generated by swaggo/swag. DO NOT EDIT.

package admin

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/login": {
            "post": {
                "description": "后台管理系统登录接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "登录退出"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "请求体",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.ReqAdminAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespAdminAuth"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespFailJson"
                        }
                    }
                }
            }
        },
        "/account/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "退出后台管理系统\n前端调用该接口，无需关注结果，自行清理掉请求头的 Authorization，页面跳转至首页\n后端可以执行清理redis缓存, 设置token黑名单等操作",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "登录退出"
                ],
                "summary": "退出",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer 用户令牌",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespEmptyJson"
                        }
                    }
                }
            }
        },
        "/account/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取用户列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "获取用户列表",
                "parameters": [
                    {
                        "type": "string",
                        "example": "2023-09-01 22:59:59",
                        "description": "最近登录时间截止",
                        "name": "last_login_at_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2023-09-01 01:30:59",
                        "description": "最近登录时间起始",
                        "name": "last_login_at_start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "description": "每页数量",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespGetUserList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespFailJson"
                        }
                    }
                }
            }
        },
        "/account/users/{uuid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取用户详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "通过用户UUID获取用户详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespUserDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespFailJson"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_cnpythongo_goal_admin_types.ReqAdminAuth": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "description": "密码",
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "description": "手机号",
                    "type": "string",
                    "example": "13800138000"
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespAdminAuth": {
            "type": "object",
            "properties": {
                "expire_time": {
                    "description": "过期时间",
                    "type": "string"
                },
                "token": {
                    "description": "令牌",
                    "type": "string"
                },
                "user": {
                    "description": "用户基本信息",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespAdminAuthUser"
                        }
                    ]
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespAdminAuthUser": {
            "type": "object",
            "properties": {
                "last_login_at": {
                    "description": "最近的登录时间",
                    "type": "string"
                },
                "phone": {
                    "description": "带掩码的手机号",
                    "type": "string",
                    "example": "138****8000"
                },
                "uuid": {
                    "description": "用户uuid",
                    "type": "string"
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespEmptyJson": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "结果码：0-成功，其它-失败",
                    "type": "integer"
                },
                "msg": {
                    "description": "消息, code不为0时，返回简单的错误描述",
                    "type": "string"
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespFailJson": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "结果码：0-成功，其它-失败",
                    "type": "integer"
                },
                "error": {
                    "description": "具体的错误信息",
                    "type": "string"
                },
                "msg": {
                    "description": "消息, code不为0时，返回简单的错误描述",
                    "type": "string"
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespGetUserList": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "总记录数",
                    "type": "integer"
                },
                "page": {
                    "description": "当前页",
                    "type": "integer"
                },
                "result": {
                    "description": "当前结果集",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_cnpythongo_goal_admin_types.RespUser"
                    }
                },
                "total": {
                    "description": "总页数",
                    "type": "integer"
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespUser": {
            "type": "object",
            "properties": {
                "last_login_at": {
                    "description": "最近登录时间",
                    "type": "string",
                    "example": "2023-09-01 13:30:59"
                },
                "nickname": {
                    "description": "昵称",
                    "type": "string",
                    "example": "goal-nick"
                },
                "phone": {
                    "description": "手机号",
                    "type": "string",
                    "example": "13800138000"
                },
                "uuid": {
                    "description": "用户UUID,32位字符串",
                    "type": "string",
                    "example": "826d6b1aa64d471d822d667e92218158"
                }
            }
        },
        "github_com_cnpythongo_goal_admin_types.RespUserDetail": {
            "type": "object",
            "properties": {
                "last_login_at": {
                    "description": "最近登录时间",
                    "type": "string",
                    "example": "2023-09-01 13:30:59"
                },
                "nickname": {
                    "description": "昵称",
                    "type": "string",
                    "example": "goal-nick"
                },
                "phone": {
                    "description": "手机号",
                    "type": "string",
                    "example": "13800138000"
                },
                "uuid": {
                    "description": "用户UUID,32位字符串",
                    "type": "string",
                    "example": "826d6b1aa64d471d822d667e92218158"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8200",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "后台管理系统接口文档",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
